<%
/**
 *  custom function
 */

ejsRoot = function(path,parent){

  parent =(parent) ? parent : '_ejs';
  var pathArr = filename.split('/').reverse();
  var count = 0;
  var flag = true;
  var relative = '';

  pathArr.forEach(function(value,key){
    if(value === parent){
      flag = false;
    }
    if(flag){
      count ++;
    }
  });

  if (count === 1){
    relative = './';
  }else if(count >= 2){
    var h = count - 1;
    for(i=0;i<h;i++){
      relative = relative + '../';
    }
  }

  return relative + path;
};

// root path fix
root = function(path){
  return config.rootPath + path;
};

// addã€€dns-prefetch
var dnsPrefetchUrl = [
  'ajax.googleapis.com',
  'googleads.g.doubleclick.net',
  'pagead2.googlesyndication.com',
  'www.gstatic.com',
  'www.jsdelivr.com'
];
var dnsLoop = function (value){ -%>
  <link rel="dns-prefetch" href="//<%= value %>">
<% };
addDnsPrefetch = function (){ dnsPrefetchUrl.forEach(dnsLoop); };

// add body class
// bodyClass = function() {
//   var filePath = filename.split('/');
//   var file = filename.split('/')[filename.split('/').length - 1].replace('.ejs', '');
//   return file;
// };

snake2camel = function(str, upper) {
    str = str
      .replace(/^[\-_ ]/g, "")
      .replace(/[\-_ ]./g, function(match) {
        return match.charAt(1).toUpperCase();
      });
    return upper === true ?
      str.replace(/^[a-z]/g, function(match) {
        return match.toUpperCase();
      }) : str;
}

zeroPadding = function(number, digit) {
  var numberLength = String(number).length;
  return (digit > numberLength) ? (new Array((digit - numberLength) + 1).join(0)) + number : number;
};


-%>
